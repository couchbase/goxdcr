// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	log "github.com/couchbase/goxdcr/log"
	metadata "github.com/couchbase/goxdcr/metadata"

	mock "github.com/stretchr/testify/mock"
)

// InitRemoteClusterRefFunc is an autogenerated mock type for the InitRemoteClusterRefFunc type
type InitRemoteClusterRefFunc struct {
	mock.Mock
}

type InitRemoteClusterRefFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *InitRemoteClusterRefFunc) EXPECT() *InitRemoteClusterRefFunc_Expecter {
	return &InitRemoteClusterRefFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *InitRemoteClusterRefFunc) Execute(_a0 *log.CommonLogger, _a1 *metadata.RemoteClusterReference) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*log.CommonLogger, *metadata.RemoteClusterReference) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InitRemoteClusterRefFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type InitRemoteClusterRefFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *log.CommonLogger
//   - _a1 *metadata.RemoteClusterReference
func (_e *InitRemoteClusterRefFunc_Expecter) Execute(_a0 interface{}, _a1 interface{}) *InitRemoteClusterRefFunc_Execute_Call {
	return &InitRemoteClusterRefFunc_Execute_Call{Call: _e.mock.On("Execute", _a0, _a1)}
}

func (_c *InitRemoteClusterRefFunc_Execute_Call) Run(run func(_a0 *log.CommonLogger, _a1 *metadata.RemoteClusterReference)) *InitRemoteClusterRefFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*log.CommonLogger), args[1].(*metadata.RemoteClusterReference))
	})
	return _c
}

func (_c *InitRemoteClusterRefFunc_Execute_Call) Return(_a0 error) *InitRemoteClusterRefFunc_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *InitRemoteClusterRefFunc_Execute_Call) RunAndReturn(run func(*log.CommonLogger, *metadata.RemoteClusterReference) error) *InitRemoteClusterRefFunc_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewInitRemoteClusterRefFunc creates a new instance of InitRemoteClusterRefFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInitRemoteClusterRefFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *InitRemoteClusterRefFunc {
	mock := &InitRemoteClusterRefFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
