// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	base "github.com/couchbase/goxdcr/v8/base"
	common "github.com/couchbase/goxdcr/v8/common"

	mock "github.com/stretchr/testify/mock"
)

// PrometheusStatusUpdater is an autogenerated mock type for the PrometheusStatusUpdater type
type PrometheusStatusUpdater struct {
	mock.Mock
}

type PrometheusStatusUpdater_Expecter struct {
	mock *mock.Mock
}

func (_m *PrometheusStatusUpdater) EXPECT() *PrometheusStatusUpdater_Expecter {
	return &PrometheusStatusUpdater_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0, status
func (_m *PrometheusStatusUpdater) Execute(_a0 common.Pipeline, status base.PipelineStatusGauge) error {
	ret := _m.Called(_a0, status)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(common.Pipeline, base.PipelineStatusGauge) error); ok {
		r0 = rf(_a0, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PrometheusStatusUpdater_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type PrometheusStatusUpdater_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 common.Pipeline
//   - status base.PipelineStatusGauge
func (_e *PrometheusStatusUpdater_Expecter) Execute(_a0 interface{}, status interface{}) *PrometheusStatusUpdater_Execute_Call {
	return &PrometheusStatusUpdater_Execute_Call{Call: _e.mock.On("Execute", _a0, status)}
}

func (_c *PrometheusStatusUpdater_Execute_Call) Run(run func(_a0 common.Pipeline, status base.PipelineStatusGauge)) *PrometheusStatusUpdater_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(common.Pipeline), args[1].(base.PipelineStatusGauge))
	})
	return _c
}

func (_c *PrometheusStatusUpdater_Execute_Call) Return(_a0 error) *PrometheusStatusUpdater_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PrometheusStatusUpdater_Execute_Call) RunAndReturn(run func(common.Pipeline, base.PipelineStatusGauge) error) *PrometheusStatusUpdater_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewPrometheusStatusUpdater creates a new instance of PrometheusStatusUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPrometheusStatusUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *PrometheusStatusUpdater {
	mock := &PrometheusStatusUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
