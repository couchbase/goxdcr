// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	log "github.com/couchbase/goxdcr/v8/log"
	metadata "github.com/couchbase/goxdcr/v8/metadata"

	mock "github.com/stretchr/testify/mock"

	service_def "github.com/couchbase/goxdcr/v8/service_def"
)

// BackfillReplInjector is an autogenerated mock type for the BackfillReplInjector type
type BackfillReplInjector struct {
	mock.Mock
}

type BackfillReplInjector_Expecter struct {
	mock *mock.Mock
}

func (_m *BackfillReplInjector) EXPECT() *BackfillReplInjector_Expecter {
	return &BackfillReplInjector_Expecter{mock: &_m.Mock}
}

// InjectBackfillReplDelay provides a mock function with given fields: spec
func (_m *BackfillReplInjector) InjectBackfillReplDelay(spec *metadata.BackfillReplicationSpec) {
	_m.Called(spec)
}

// BackfillReplInjector_InjectBackfillReplDelay_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectBackfillReplDelay'
type BackfillReplInjector_InjectBackfillReplDelay_Call struct {
	*mock.Call
}

// InjectBackfillReplDelay is a helper method to define mock.On call
//   - spec *metadata.BackfillReplicationSpec
func (_e *BackfillReplInjector_Expecter) InjectBackfillReplDelay(spec interface{}) *BackfillReplInjector_InjectBackfillReplDelay_Call {
	return &BackfillReplInjector_InjectBackfillReplDelay_Call{Call: _e.mock.On("InjectBackfillReplDelay", spec)}
}

func (_c *BackfillReplInjector_InjectBackfillReplDelay_Call) Run(run func(spec *metadata.BackfillReplicationSpec)) *BackfillReplInjector_InjectBackfillReplDelay_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*metadata.BackfillReplicationSpec))
	})
	return _c
}

func (_c *BackfillReplInjector_InjectBackfillReplDelay_Call) Return() *BackfillReplInjector_InjectBackfillReplDelay_Call {
	_c.Call.Return()
	return _c
}

func (_c *BackfillReplInjector_InjectBackfillReplDelay_Call) RunAndReturn(run func(*metadata.BackfillReplicationSpec)) *BackfillReplInjector_InjectBackfillReplDelay_Call {
	_c.Run(run)
	return _c
}

// InjectRaiseCompleteBackfillDelay provides a mock function with given fields: replSpecSvc, backfillSpecId, logger
func (_m *BackfillReplInjector) InjectRaiseCompleteBackfillDelay(replSpecSvc service_def.ReplicationSpecSvc, backfillSpecId string, logger *log.CommonLogger) bool {
	ret := _m.Called(replSpecSvc, backfillSpecId, logger)

	if len(ret) == 0 {
		panic("no return value specified for InjectRaiseCompleteBackfillDelay")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(service_def.ReplicationSpecSvc, string, *log.CommonLogger) bool); ok {
		r0 = rf(replSpecSvc, backfillSpecId, logger)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectRaiseCompleteBackfillDelay'
type BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call struct {
	*mock.Call
}

// InjectRaiseCompleteBackfillDelay is a helper method to define mock.On call
//   - replSpecSvc service_def.ReplicationSpecSvc
//   - backfillSpecId string
//   - logger *log.CommonLogger
func (_e *BackfillReplInjector_Expecter) InjectRaiseCompleteBackfillDelay(replSpecSvc interface{}, backfillSpecId interface{}, logger interface{}) *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call {
	return &BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call{Call: _e.mock.On("InjectRaiseCompleteBackfillDelay", replSpecSvc, backfillSpecId, logger)}
}

func (_c *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call) Run(run func(replSpecSvc service_def.ReplicationSpecSvc, backfillSpecId string, logger *log.CommonLogger)) *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(service_def.ReplicationSpecSvc), args[1].(string), args[2].(*log.CommonLogger))
	})
	return _c
}

func (_c *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call) Return(_a0 bool) *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call) RunAndReturn(run func(service_def.ReplicationSpecSvc, string, *log.CommonLogger) bool) *BackfillReplInjector_InjectRaiseCompleteBackfillDelay_Call {
	_c.Call.Return(run)
	return _c
}

// NewBackfillReplInjector creates a new instance of BackfillReplInjector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBackfillReplInjector(t interface {
	mock.TestingT
	Cleanup(func())
}) *BackfillReplInjector {
	mock := &BackfillReplInjector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
