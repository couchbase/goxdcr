// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DecrementerFunc is an autogenerated mock type for the DecrementerFunc type
type DecrementerFunc struct {
	mock.Mock
}

type DecrementerFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *DecrementerFunc) EXPECT() *DecrementerFunc_Expecter {
	return &DecrementerFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: shaString
func (_m *DecrementerFunc) Execute(shaString string) {
	_m.Called(shaString)
}

// DecrementerFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type DecrementerFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - shaString string
func (_e *DecrementerFunc_Expecter) Execute(shaString interface{}) *DecrementerFunc_Execute_Call {
	return &DecrementerFunc_Execute_Call{Call: _e.mock.On("Execute", shaString)}
}

func (_c *DecrementerFunc_Execute_Call) Run(run func(shaString string)) *DecrementerFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *DecrementerFunc_Execute_Call) Return() *DecrementerFunc_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *DecrementerFunc_Execute_Call) RunAndReturn(run func(string)) *DecrementerFunc_Execute_Call {
	_c.Run(run)
	return _c
}

// NewDecrementerFunc creates a new instance of DecrementerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDecrementerFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *DecrementerFunc {
	mock := &DecrementerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
