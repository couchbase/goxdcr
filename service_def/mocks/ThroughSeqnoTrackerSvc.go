package mocks

import (
	common "github.com/couchbase/goxdcr/common"
	mock "github.com/stretchr/testify/mock"
)

// ThroughSeqnoTrackerSvc is an autogenerated mock type for the ThroughSeqnoTrackerSvc type
type ThroughSeqnoTrackerSvc struct {
	mock.Mock
}

// Attach provides a mock function with given fields: pipeline
func (_m *ThroughSeqnoTrackerSvc) Attach(pipeline common.Pipeline) error {
	ret := _m.Called(pipeline)

	var r0 error
	if rf, ok := ret.Get(0).(func(common.Pipeline) error); ok {
		r0 = rf(pipeline)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetThroughSeqno provides a mock function with given fields: vbno
func (_m *ThroughSeqnoTrackerSvc) GetThroughSeqno(vbno uint16) uint64 {
	ret := _m.Called(vbno)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(uint16) uint64); ok {
		r0 = rf(vbno)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// GetThroughSeqnos provides a mock function with given fields:
func (_m *ThroughSeqnoTrackerSvc) GetThroughSeqnos() map[uint16]uint64 {
	ret := _m.Called()

	var r0 map[uint16]uint64
	if rf, ok := ret.Get(0).(func() map[uint16]uint64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[uint16]uint64)
		}
	}

	return r0
}

// PrintStatusSummary provides a mock function with given fields:
func (_m *ThroughSeqnoTrackerSvc) PrintStatusSummary() {
	_m.Called()
}

// SetStartSeqno provides a mock function with given fields: vbno, seqno
func (_m *ThroughSeqnoTrackerSvc) SetStartSeqno(vbno uint16, seqno uint64) {
	_m.Called(vbno, seqno)
}
