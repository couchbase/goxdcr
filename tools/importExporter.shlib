#!/usr/bin/env bash
set -u

# Copyright (c) 2019 Couchbase, Inc.
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions
# and limitations under the License.

function exportSingleVarMap {
	local name=$1
	#first see if it is exported validly
	if (( `declare -p $name | grep -c "="` == 0 ));then
		return 1
	fi

	# First check if declare shows -Ax or just -A
	flag=`declare -p $name| awk '{print $2}'`
	if (( $? != 0 ));then
		return $?
	fi
	declare -p $name | sed "s/declare ${flag}/export -A/g"
}

function exportSingleVar {
	local name=$1
	flag=`declare -p $name| awk '{print $2}'`
	if (( $? != 0 ));then
		return $?
	fi
	declare -p $name | sed "s/declare ${flag}/export /g"
}

declare XDCR_HIDDEN_EXPORTFILE=".xdcrToolsExport"

function exportProvisionedConfig {
	local -a outputArr
	local outputFile=$XDCR_HIDDEN_EXPORTFILE

	for mapName in CLUSTER_NAME_PORT_MAP \
					CLUSTER_NAME_XDCR_PORT_MAP \
					CLUSTER_NAME_BUCKET_MAP \
					BUCKET_NAME_RAMQUOTA_MAP \
					BUCKET_NAME_SCOPE_MAP \
					SCOPE_NAME_COLLECTION_MAP \
					BUCKET_PROPERTIES_OUTPUT_MAP \
					BUCKET_REPL_PROPERTIES_MAP \
					BUCKET_REPL_PROPERTIES_OUTPUT_MAP \
					BUCKET_REPL_EXPORT_MAP
	do
		local outputStr=`exportSingleVarMap $mapName`
		if (( $? == 0 ));then
			outputArr+=("$outputStr")
		fi
	done

	for varName in DEFAULT_ADMIN DEFAULT_PW
	do
		local outputStr=`exportSingleVar $varName`
		if (( $? == 0 ));then
			outputArr+=("$outputStr")
		fi
	done

	for oneLine in "${outputArr[@]}"
	do
		echo "$oneLine" >> $outputFile
	done
}

function importProvisionedConfig {
	# Find the exported variables file
	. $XDCR_HIDDEN_EXPORTFILE
}

# Returns via stdout: REST id
# Returns status code 0 if found
function getRestIDFromExportedData {
	local srcClusterName=$1
	local srcBucketName=$2
	local targetClusterName=$3
	local targetBucketName=$4

	for replKey in "${!BUCKET_REPL_EXPORT_MAP[@]}"
	do
		local chkSourceCluster=`echo "$replKey" | cut -d, -f1`
		local restID=`echo "${BUCKET_REPL_EXPORT_MAP[$replKey]}" | sed 's/"//g'`
		local chkSourcePort=${CLUSTER_NAME_PORT_MAP[$chkSourceCluster]:-}
		local chkSourceBucket=`echo "$replKey" | cut -d, -f2`
		local chkTargetCluster=`echo "$replKey" | cut -d, -f3`
		local chkTargetBucket=`echo "$replKey" | cut -d, -f4`

		if [[ "$srcClusterName" == "$chkSourceCluster" ]] && [[ "$srcBucketName" == "$chkSourceBucket" ]] \
		&& [[ "$targetClusterName" == "$chkTargetCluster" ]] && [[ "$targetBucketName" == "$chkTargetBucket" ]]
		then
			echo "$restID"
			return 0
		fi
	done

	# not found
	return 1
}
