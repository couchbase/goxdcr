# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/focal64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 8091, host: 18091

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  numNodes = 4
  #ipAddrPrefix = "192.168.56.10"
  config.vm.provider "virtualbox" do |v|
     v.customize ["modifyvm", :id, "--memory", 8096]
  end

  1.upto(numNodes) do |num|
     nodeName = ("node" + num.to_s).to_sym
     config.vm.define nodeName do |node|
        node.vm.box = "ubuntu/focal64"
        #node.vm.network "private_network", ip: ipAddrPrefix + num.to_s
        node.vm.provider "virtualbox" do |v|
           v.name = "Couchbase Server 7.x Node " + num.to_s
        end
     end
  end

  config.vm.define "node1" do |node1|
    node1.vm.box = "ubuntu/focal64"
    node1.vm.network "forwarded_port", guest: 8091,  host: 15000
    node1.vm.network "forwarded_port", guest: 8092,  host: 15010
    node1.vm.network "forwarded_port", guest: 11210, host: 15100
    node1.vm.network "forwarded_port", guest: 9998,  host: 15996
    node1.vm.network "private_network", ip: "192.168.56.1"
    #curl -X PUT -u Administrator:wewewe -d 'hostname=127.0.0.1&mgmt=15000&kv=15100&capi=15010'  http://127.0.0.1:15000/node/controller/setupAlternateAddresses/external
  end

  config.vm.define "node2" do |node2|
    node2.vm.box = "ubuntu/focal64"
    node2.vm.network "forwarded_port", guest: 8091,  host: 15001
    node2.vm.network "forwarded_port", guest: 8092,  host: 15011
    node2.vm.network "forwarded_port", guest: 11210, host: 15101
    node2.vm.network "forwarded_port", guest: 9998,  host: 15997
    node2.vm.network "private_network", ip: "192.168.56.2"
    #curl -X PUT -u Administrator:wewewe -d 'hostname=127.0.0.1&mgmt=15001&kv=15101&capi=15011'  http://127.0.0.1:15001/node/controller/setupAlternateAddresses/external
  end

  config.vm.define "node3" do |node3|
    node3.vm.box = "ubuntu/focal64"
    node3.vm.network "forwarded_port", guest: 8091,  host: 15002
    node3.vm.network "forwarded_port", guest: 8092,  host: 15012
    node3.vm.network "forwarded_port", guest: 11210, host: 15102
    node3.vm.network "forwarded_port", guest: 9998,  host: 15998
    node3.vm.network "private_network", ip: "192.168.56.3"
    #curl -X PUT -u Administrator:wewewe -d 'hostname=127.0.0.1&mgmt=15002&kv=15102&capi=15012'  http://127.0.0.1:15002/node/controller/setupAlternateAddresses/external
  end

  config.vm.define "node4" do |node4|
    node4.vm.box = "ubuntu/focal64"
    node4.vm.network "forwarded_port", guest: 8091,  host: 15003
    node4.vm.network "forwarded_port", guest: 8092,  host: 15013
    node4.vm.network "forwarded_port", guest: 11210, host: 15103
    node4.vm.network "forwarded_port", guest: 9998,  host: 15999
    node4.vm.network "private_network", ip: "192.168.56.4"
    #curl -X PUT -u Administrator:wewewe -d 'hostname=127.0.0.1&mgmt=15003&kv=15103&capi=15013'  http://127.0.0.1:15003/node/controller/setupAlternateAddresses/external
  end
end

# For clusterRun replicating to the above cluster, run the curl commands above on the guest VMs to set up alternate addressing

# For replicating back to clusterRun, the clusterRun needs to have external addressing set up too
# First, from the virtual machine, check the gateway:

# vagrant@ubuntu-focal:~$ netstat -rn
# Kernel IP routing table
# Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
# 0.0.0.0         10.0.2.2        0.0.0.0         UG        0 0          0 enp0s3
# 10.0.2.0        0.0.0.0         255.255.255.0   U         0 0          0 enp0s3
# 10.0.2.2        0.0.0.0         255.255.255.255 UH        0 0          0 enp0s3
# 10.10.0.0       0.0.0.0         255.255.255.0   U         0 0          0 enp0s9
# 192.168.56.0    0.0.0.0         255.255.255.0   U         0 0          0 enp0s8

# Then use the gateway address as alternate address on the clusterRun
#curl -X PUT -u Administrator:wewewe -d 'hostname=10.0.2.2&mgmt=9000&kv=12000&capi=9500' http://127.0.0.1:9000/node/controller/setupAlternateAddresses/external


