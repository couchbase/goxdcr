// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	metadata "github.com/couchbase/goxdcr/v8/metadata"
	mock "github.com/stretchr/testify/mock"
)

// FactoryDevInjector is an autogenerated mock type for the FactoryDevInjector type
type FactoryDevInjector struct {
	mock.Mock
}

type FactoryDevInjector_Expecter struct {
	mock *mock.Mock
}

func (_m *FactoryDevInjector) EXPECT() *FactoryDevInjector_Expecter {
	return &FactoryDevInjector_Expecter{mock: &_m.Mock}
}

// InjectCheckpointMgr provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectCheckpointMgr(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectCheckpointMgr_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectCheckpointMgr'
type FactoryDevInjector_InjectCheckpointMgr_Call struct {
	*mock.Call
}

// InjectCheckpointMgr is a helper method to define mock.On call
//   - in metadata.ReplicationSettingsMap
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectCheckpointMgr(in interface{}, out interface{}) *FactoryDevInjector_InjectCheckpointMgr_Call {
	return &FactoryDevInjector_InjectCheckpointMgr_Call{Call: _e.mock.On("InjectCheckpointMgr", in, out)}
}

func (_c *FactoryDevInjector_InjectCheckpointMgr_Call) Run(run func(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectCheckpointMgr_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettingsMap), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectCheckpointMgr_Call) Return() *FactoryDevInjector_InjectCheckpointMgr_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectCheckpointMgr_Call) RunAndReturn(run func(metadata.ReplicationSettingsMap, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectCheckpointMgr_Call {
	_c.Run(run)
	return _c
}

// InjectDcpNozzle provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectDcpNozzle(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectDcpNozzle_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectDcpNozzle'
type FactoryDevInjector_InjectDcpNozzle_Call struct {
	*mock.Call
}

// InjectDcpNozzle is a helper method to define mock.On call
//   - in metadata.ReplicationSettingsMap
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectDcpNozzle(in interface{}, out interface{}) *FactoryDevInjector_InjectDcpNozzle_Call {
	return &FactoryDevInjector_InjectDcpNozzle_Call{Call: _e.mock.On("InjectDcpNozzle", in, out)}
}

func (_c *FactoryDevInjector_InjectDcpNozzle_Call) Run(run func(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectDcpNozzle_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettingsMap), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectDcpNozzle_Call) Return() *FactoryDevInjector_InjectDcpNozzle_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectDcpNozzle_Call) RunAndReturn(run func(metadata.ReplicationSettingsMap, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectDcpNozzle_Call {
	_c.Run(run)
	return _c
}

// InjectDcpNozzleUpdate provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectDcpNozzleUpdate(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectDcpNozzleUpdate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectDcpNozzleUpdate'
type FactoryDevInjector_InjectDcpNozzleUpdate_Call struct {
	*mock.Call
}

// InjectDcpNozzleUpdate is a helper method to define mock.On call
//   - in metadata.ReplicationSettingsMap
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectDcpNozzleUpdate(in interface{}, out interface{}) *FactoryDevInjector_InjectDcpNozzleUpdate_Call {
	return &FactoryDevInjector_InjectDcpNozzleUpdate_Call{Call: _e.mock.On("InjectDcpNozzleUpdate", in, out)}
}

func (_c *FactoryDevInjector_InjectDcpNozzleUpdate_Call) Run(run func(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectDcpNozzleUpdate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettingsMap), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectDcpNozzleUpdate_Call) Return() *FactoryDevInjector_InjectDcpNozzleUpdate_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectDcpNozzleUpdate_Call) RunAndReturn(run func(metadata.ReplicationSettingsMap, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectDcpNozzleUpdate_Call {
	_c.Run(run)
	return _c
}

// InjectRouter provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectRouter(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectRouter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectRouter'
type FactoryDevInjector_InjectRouter_Call struct {
	*mock.Call
}

// InjectRouter is a helper method to define mock.On call
//   - in metadata.ReplicationSettingsMap
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectRouter(in interface{}, out interface{}) *FactoryDevInjector_InjectRouter_Call {
	return &FactoryDevInjector_InjectRouter_Call{Call: _e.mock.On("InjectRouter", in, out)}
}

func (_c *FactoryDevInjector_InjectRouter_Call) Run(run func(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectRouter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettingsMap), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectRouter_Call) Return() *FactoryDevInjector_InjectRouter_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectRouter_Call) RunAndReturn(run func(metadata.ReplicationSettingsMap, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectRouter_Call {
	_c.Run(run)
	return _c
}

// InjectXmemNozzle provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectXmemNozzle(in metadata.ReplicationSettings, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectXmemNozzle_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectXmemNozzle'
type FactoryDevInjector_InjectXmemNozzle_Call struct {
	*mock.Call
}

// InjectXmemNozzle is a helper method to define mock.On call
//   - in metadata.ReplicationSettings
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectXmemNozzle(in interface{}, out interface{}) *FactoryDevInjector_InjectXmemNozzle_Call {
	return &FactoryDevInjector_InjectXmemNozzle_Call{Call: _e.mock.On("InjectXmemNozzle", in, out)}
}

func (_c *FactoryDevInjector_InjectXmemNozzle_Call) Run(run func(in metadata.ReplicationSettings, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectXmemNozzle_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettings), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectXmemNozzle_Call) Return() *FactoryDevInjector_InjectXmemNozzle_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectXmemNozzle_Call) RunAndReturn(run func(metadata.ReplicationSettings, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectXmemNozzle_Call {
	_c.Run(run)
	return _c
}

// InjectXmemNozzleUpdate provides a mock function with given fields: in, out
func (_m *FactoryDevInjector) InjectXmemNozzleUpdate(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap) {
	_m.Called(in, out)
}

// FactoryDevInjector_InjectXmemNozzleUpdate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectXmemNozzleUpdate'
type FactoryDevInjector_InjectXmemNozzleUpdate_Call struct {
	*mock.Call
}

// InjectXmemNozzleUpdate is a helper method to define mock.On call
//   - in metadata.ReplicationSettingsMap
//   - out metadata.ReplicationSettingsMap
func (_e *FactoryDevInjector_Expecter) InjectXmemNozzleUpdate(in interface{}, out interface{}) *FactoryDevInjector_InjectXmemNozzleUpdate_Call {
	return &FactoryDevInjector_InjectXmemNozzleUpdate_Call{Call: _e.mock.On("InjectXmemNozzleUpdate", in, out)}
}

func (_c *FactoryDevInjector_InjectXmemNozzleUpdate_Call) Run(run func(in metadata.ReplicationSettingsMap, out metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectXmemNozzleUpdate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(metadata.ReplicationSettingsMap), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *FactoryDevInjector_InjectXmemNozzleUpdate_Call) Return() *FactoryDevInjector_InjectXmemNozzleUpdate_Call {
	_c.Call.Return()
	return _c
}

func (_c *FactoryDevInjector_InjectXmemNozzleUpdate_Call) RunAndReturn(run func(metadata.ReplicationSettingsMap, metadata.ReplicationSettingsMap)) *FactoryDevInjector_InjectXmemNozzleUpdate_Call {
	_c.Run(run)
	return _c
}

// NewFactoryDevInjector creates a new instance of FactoryDevInjector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFactoryDevInjector(t interface {
	mock.TestingT
	Cleanup(func())
}) *FactoryDevInjector {
	mock := &FactoryDevInjector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
