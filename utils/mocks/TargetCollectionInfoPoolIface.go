// Code generated by mockery v2.35.4. DO NOT EDIT.

package mocks

import (
	base "github.com/couchbase/goxdcr/base"
	mock "github.com/stretchr/testify/mock"
)

// TargetCollectionInfoPoolIface is an autogenerated mock type for the TargetCollectionInfoPoolIface type
type TargetCollectionInfoPoolIface struct {
	mock.Mock
}

// Get provides a mock function with given fields:
func (_m *TargetCollectionInfoPoolIface) Get() *base.TargetCollectionInfo {
	ret := _m.Called()

	var r0 *base.TargetCollectionInfo
	if rf, ok := ret.Get(0).(func() *base.TargetCollectionInfo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*base.TargetCollectionInfo)
		}
	}

	return r0
}

// Put provides a mock function with given fields: _a0
func (_m *TargetCollectionInfoPoolIface) Put(_a0 *base.TargetCollectionInfo) {
	_m.Called(_a0)
}

// NewTargetCollectionInfoPoolIface creates a new instance of TargetCollectionInfoPoolIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTargetCollectionInfoPoolIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *TargetCollectionInfoPoolIface {
	mock := &TargetCollectionInfoPoolIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
