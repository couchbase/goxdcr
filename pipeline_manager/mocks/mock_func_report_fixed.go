// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// func_report_fixed is an autogenerated mock type for the func_report_fixed type
type func_report_fixed struct {
	mock.Mock
}

type func_report_fixed_Expecter struct {
	mock *mock.Mock
}

func (_m *func_report_fixed) EXPECT() *func_report_fixed_Expecter {
	return &func_report_fixed_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: topic
func (_m *func_report_fixed) Execute(topic string) {
	_m.Called(topic)
}

// func_report_fixed_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type func_report_fixed_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - topic string
func (_e *func_report_fixed_Expecter) Execute(topic interface{}) *func_report_fixed_Execute_Call {
	return &func_report_fixed_Execute_Call{Call: _e.mock.On("Execute", topic)}
}

func (_c *func_report_fixed_Execute_Call) Run(run func(topic string)) *func_report_fixed_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *func_report_fixed_Execute_Call) Return() *func_report_fixed_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *func_report_fixed_Execute_Call) RunAndReturn(run func(string)) *func_report_fixed_Execute_Call {
	_c.Run(run)
	return _c
}

// newFunc_report_fixed creates a new instance of func_report_fixed. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newFunc_report_fixed(t interface {
	mock.TestingT
	Cleanup(func())
}) *func_report_fixed {
	mock := &func_report_fixed{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
