// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	metadata "github.com/couchbase/goxdcr/v8/metadata"
	mock "github.com/stretchr/testify/mock"

	pipeline_svc "github.com/couchbase/goxdcr/v8/pipeline_svc"
)

// CheckpointManagerInjector is an autogenerated mock type for the CheckpointManagerInjector type
type CheckpointManagerInjector struct {
	mock.Mock
}

type CheckpointManagerInjector_Expecter struct {
	mock *mock.Mock
}

func (_m *CheckpointManagerInjector) EXPECT() *CheckpointManagerInjector_Expecter {
	return &CheckpointManagerInjector_Expecter{mock: &_m.Mock}
}

// InjectGcWaitSec provides a mock function with given fields: ckmgr, settings
func (_m *CheckpointManagerInjector) InjectGcWaitSec(ckmgr *pipeline_svc.CheckpointManager, settings metadata.ReplicationSettingsMap) {
	_m.Called(ckmgr, settings)
}

// CheckpointManagerInjector_InjectGcWaitSec_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InjectGcWaitSec'
type CheckpointManagerInjector_InjectGcWaitSec_Call struct {
	*mock.Call
}

// InjectGcWaitSec is a helper method to define mock.On call
//   - ckmgr *pipeline_svc.CheckpointManager
//   - settings metadata.ReplicationSettingsMap
func (_e *CheckpointManagerInjector_Expecter) InjectGcWaitSec(ckmgr interface{}, settings interface{}) *CheckpointManagerInjector_InjectGcWaitSec_Call {
	return &CheckpointManagerInjector_InjectGcWaitSec_Call{Call: _e.mock.On("InjectGcWaitSec", ckmgr, settings)}
}

func (_c *CheckpointManagerInjector_InjectGcWaitSec_Call) Run(run func(ckmgr *pipeline_svc.CheckpointManager, settings metadata.ReplicationSettingsMap)) *CheckpointManagerInjector_InjectGcWaitSec_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*pipeline_svc.CheckpointManager), args[1].(metadata.ReplicationSettingsMap))
	})
	return _c
}

func (_c *CheckpointManagerInjector_InjectGcWaitSec_Call) Return() *CheckpointManagerInjector_InjectGcWaitSec_Call {
	_c.Call.Return()
	return _c
}

func (_c *CheckpointManagerInjector_InjectGcWaitSec_Call) RunAndReturn(run func(*pipeline_svc.CheckpointManager, metadata.ReplicationSettingsMap)) *CheckpointManagerInjector_InjectGcWaitSec_Call {
	_c.Run(run)
	return _c
}

// NewCheckpointManagerInjector creates a new instance of CheckpointManagerInjector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCheckpointManagerInjector(t interface {
	mock.TestingT
	Cleanup(func())
}) *CheckpointManagerInjector {
	mock := &CheckpointManagerInjector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
